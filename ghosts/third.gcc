int 3        ;Get ghost's name
mov [4],A
int 4        ;Get ghost's position
mov [5],A
mov [6],B   ;Finish Storing ghost's position
int 1     ;Get Lambda Man's position
mov [7],A
mov [8],B ;Finish storing Lambda Man's position
mov A,[5]  ;Collect Wall info
mov B,[6]
inc A
int 7
mov [1],A
mov A,[5]
dec A
int 7
mov [3],A
mov A,[5]
inc B
int 7
mov [2],A
mov B,[6]
mov A,[5]
dec B
int 7
mov [0],A  ;Finish Collecting Wall info
int 8
mov [9],0  ;intialize direction weights
mov [10],0
mov [11],0
mov [12],0 ;finished int direction weights
jgt 35,[5],[7]  ;jump if lm is on left Determin the weights of which direction to move based on lm locations
mov [10],[7]
sub  [10],[5]
jeq 37,0,0
mov [12],[5]    ;35
sub  [12],[7]
jgt 41,[6],[8]  ;37 jump if lm is on up 
mov [11],[8]
sub [11],[6]
jeq 43,0,0
mov [9],[6] ;41
sub  [9],[8]
jgt 50,[9],[11]   ;43 jump if up is better
jgt 50,[10],[12]  ;jump if right is better
jgt 50,[11],[12]  ;jump if down is better
jeq 50,[3],0      ;jump if left is wall
mov A,3
int 0               ;mov left
hlt
jgt 56,[9],[11]   ;50 jump if up is better
jgt 56,[11],[10]  ;jump if down is better
jeq 56,[1],0      ;jump if left is wall
mov A,1
int 0               ;mov right
hlt
jgt 61,[9],[11]   ;56 jump if up is better
jeq 61,[2],0      ;jump if down is wall
mov A,2
int 0               ;mov down
hlt
jeq 65,[0],0      ;61 jump if up is wall
mov A,0
int 0
hlt
jgt 71,[10],[12]  ;65 jump if right is better
jgt 71,[11],[12]  ;jump if down is better
jeq 71,[3],0      ;jump if left is wall
mov A,3
int 0               ;mov left
hlt
jgt 76,[11],[12]  ;71 jump if down is better
jeq 76,[1],0      ;jump if right is wall
mov A,1
int 0               ;mov right
hlt
jeq 80,[2],0      ;76 jump if down is wall
mov A,2
int 0               ;mov down
hlt
jgt 85,[10],[12]  ;80 jump if right is better
jeq 85,[3],0      ;jump if left is wall
mov A,3
int 0               ;mov left
hlt
jeq 85,[1],0      ;85 jump if right is wall
mov A,1
int 0               ;mov right
hlt
mov A,3    ;85
int 0               ;mov left
hlt
